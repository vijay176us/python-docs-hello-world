# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'
strategy:
  matrix:
    #  Python27:
    #    python.version: '2.7'
    #  Python35:
    #    python.version: '3.5'
    #  Python36:
    #    python.version: '3.6'
     Python37:
       python.version: '3.7'


    stages:
    - stage: Build
      jobs:
      - job: BuildJob
        pool:
          vmImage: ubuntu-16.04
        steps:
        - task: UsePythonVersion@0
          inputs:
            versionSpec: '$(python.version)'
            displayName: 'Use Python $(python.version)'
        
        - script: |
            python -m pip install --upgrade pip
            pip install -r requirements.txt
          displayName: 'Install dependencies'
        - script: |
            flask run
            displayName: 'Starting an App'

    - stage: Test
      jobs:
      - job: TestOnWindows
        steps:
        - script: echo Testing on Windows!
      - job: TestOnLinux
        steps:
        - script: echo Testing on Linux!
    # - stage: Deploy
    #   jobs:
    #   - job: Deploy
    #     steps:
    #     - script: echo Deploying the code!
